<!--
 - OS.NET
 - Copyright (C) 2024 Takym.
 -
 - distributed under the MIT License.
-->
<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<!--<OutputType>Exe</OutputType>-->
		<PublishAot>true</PublishAot>
		<PublishTrimmed>true</PublishTrimmed>
		<SelfContained>true</SelfContained>
		<LinkerSubsystem>EFI_APPLICATION</LinkerSubsystem>
		<EntryPointSymbol>UefiMain</EntryPointSymbol>
		<IlcSystemModule>System.Operating.BootstrapLoader</IlcSystemModule>
		<DefineConstants>$(DefineConstants);UEFI;HALT_LOOP_ENABLED</DefineConstants>
	</PropertyGroup>
	<ItemGroup>
		<NasmFile Include="**/*.asm" Exclude="bin/**/*.asm;obj/**/*.asm" Format="win64" />
	</ItemGroup>
	<Import Project="../System.Operating.SharedRuntime/System.Operating.SharedRuntime.targets" Label="SharedRuntime" />
	<Target Name="PrepareNasmFiles" BeforeTargets="CompileNasmFiles">
		<PropertyGroup>
			<NasmOutputPath Condition="'$(NasmOutputPath)'==''">$(IntermediateOutputPath)nasm/</NasmOutputPath>
		</PropertyGroup>
	</Target>
	<Target Name="CompileNasmFiles" AfterTargets="PrepareNasmFiles" BeforeTargets="ClearNativeLibraries" Inputs="@(NasmFile)" Outputs="@(NasmFile->'$(NasmOutputPath)%(RecursiveDir)%(Filename).lst');@(NasmFile->'$(NasmOutputPath)%(RecursiveDir)%(Filename).obj')">
		<ItemGroup>
			<NasmList   Include="@(NasmFile->'$(NasmOutputPath)%(RecursiveDir)%(Filename).lst')" Format="%(Format)" />
			<NasmObject Include="@(NasmFile->'$(NasmOutputPath)%(RecursiveDir)%(Filename).obj')" Format="%(Format)" />
		</ItemGroup>
		<MakeDir Directories="$(NasmOutputPath)%(NasmFile.RecursiveDir)" />
		<Exec Command="nasm &quot;%(NasmFile.Identity)&quot; -l &quot;$(NasmOutputPath)%(RecursiveDir)%(Filename).lst&quot; -o &quot;$(NasmOutputPath)%(RecursiveDir)%(Filename).obj&quot; -f &quot;%(Format)&quot;" />
	</Target>
	<Target Name="ClearNativeLibraries" AfterTargets="SetupOSSpecificProps" BeforeTargets="LinkNative">
		<PropertyGroup>
			<ExportsFile />
		</PropertyGroup>
		<ItemGroup>
			<AdditionalNativeLibraryDirectories Remove="@(AdditionalNativeLibraryDirectories)" />
			<LinkerArg Remove="@(LinkerArg)" />
			<LinkerArg Include="/SUBSYSTEM:$(LinkerSubsystem)" />
			<LinkerArg Include="/ENTRY:$(EntryPointSymbol) /NOEXP /NOIMPLIB" />
			<LinkerArg Condition="'%(NasmObject.Format)'=='$(NasmFormat)'" Include="&quot;%(Identity)&quot;" />
		</ItemGroup>
	</Target>
	<Target Name="RemoveHostConfigurationOptions" BeforeTargets="WriteIlcRspFileForCompilation" DependsOnTargets="PrepareForILLink">
		<ItemGroup>
			<RuntimeHostConfigurationOption Remove="@(RuntimeHostConfigurationOption)" />
		</ItemGroup>
	</Target>
	<Target Name="CopyAppFile" AfterTargets="CopyNativeBinary" Inputs="$(PublishDir)$(TargetName)$(NativeBinaryExt)" Outputs="$(DiskRootDir)$(AppFileName)">
		<Copy SourceFiles="$(PublishDir)$(TargetName)$(NativeBinaryExt)" DestinationFiles="$(DiskRootDir)$(AppFileName)" />
		<Exec Command="rem &quot;Copied: $(PublishDir)$(TargetName)$(NativeBinaryExt) ---&gt; $(DiskRootDir)$(AppFileName)&quot;" />
	</Target>
</Project>
